
;; Function main (main, funcdef_no=0, decl_uid=3174, cgraph_uid=1, symbol_order=0)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
mul.c:18: printf: objsize = 9223372036854775807, fmtstr = "%d
"
  Directive 1 at offset 0: "%d"
    Result: 1, 1, 11, 11 (1, 1, 11, 11)
  Directive 2 at offset 2: "
", length = 1
    Result: 1, 1, 1, 1 (2, 2, 12, 12)
  Directive 3 at offset 3: "", length = 1
void main ()
{
  int f;
  int n;
  int i;
  int n.0_1;
  int n.1_2;

  <bb 2> :
  i_6 = 2;
  f_7 = 1;
  scanf ("%d", &n);
  n.0_1 = n;
  if (n.0_1 > 10000)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_puts (&"your should input a lower word"[0]);
  goto <bb 5>; [INV]

  <bb 4> :
  __builtin_puts (&"wait for result"[0]);

  <bb 5> :
  goto <bb 7>; [INV]

  <bb 6> :
  f_14 = f_4 * i_3;
  i_15 = i_3 * 2;

  <bb 7> :
  # i_3 = PHI <i_6(5), i_15(6)>
  # f_4 = PHI <f_7(5), f_14(6)>
  n.1_2 = n;
  if (i_3 <= n.1_2)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  printf ("%d\n", f_4);
  n ={v} {CLOBBER(eol)};
  return;

}


